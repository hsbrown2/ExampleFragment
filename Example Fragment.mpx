<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--
%%
Description:

Version: 1.0
LastModified: 01-Dec-2023
%%

In this fragment you need to replace:
##ApplicationName##
##FILENAME##
##ApplicationFriendlyName##

This fragment depends on references:
  RequiredReference: Alias="Windows", ID="Microsoft.Windows.Library", Version="7.5.8501.0"
  RequiredReference: Alias="MicrosoftSystemCenterInstanceGroupLibrary7585010", ID="Microsoft.SystemCenter.InstanceGroup.Library", Version="7.5.8501.0"
  RequiredReference: Alias="System", ID="System.Library", Version="7.5.8501.0"
  RequiredReference: Alias="IIS", ID="Microsoft.Windows.InternetInformationServices.CommonLibrary", Version="10.1.0.1"
  RequiredReference: Alias="MicrosoftWindowsInternetInformationServices2016", ID="Microsoft.Windows.InternetInformationServices.2016", Version="10.1.0.1"
-->
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="##ApplicationName##.Application.Web.Sites.Instances.Group" Accessibility="Public" Abstract="false" Base="MicrosoftSystemCenterInstanceGroupLibrary7585010!Microsoft.SystemCenter.InstanceGroup" Hosted="false" Singleton="false" Extension="false">
          <Property ID="ApplicationInstance" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="TypeID" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
        </ClassType>
      </ClassTypes>
    </EntityTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="##ApplicationName##.Application.Web.Sites.Instances.Group.Discovery" Enabled="true" Target="IIS!Microsoft.Windows.InternetInformationServices.ServerRole" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="##ApplicationName##.Application.Web.Sites.Instances.Group" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
          <IntervalSeconds>300</IntervalSeconds>
          <SyncTime>
          </SyncTime>
          <ScriptName>##ApplicationName##.Application.Web.Sites.Instances.Group.Discovery.ps1</ScriptName>
          <ScriptBody>
      param($SourceID, $ManagedEntityID, $ComputerName, $FileName)
            
      # Constants section - modify stuff here:
      #=================================================================================
      # Assign script name variable for use in event logging
      $ScriptName = "##ApplicationName##.Application.Web.Sites.Instances.Group.Discovery.ps1"
      $EventID = "7500"
      #=================================================================================
            
            
      # Starting Script section - All scripts get this
      #=================================================================================
      # Gather the start time of the script
      $StartTime = Get-Date
      # Load MOMScript API
      $momapi = New-Object -comObject MOM.ScriptAPI
      # Load SCOM Discovery module
      $DiscoveryData = $momapi.CreateDiscoveryData(0, $SourceId, $ManagedEntityId)
      #Set variables to be used in logging events
      $whoami = whoami
      #Log script event that we are starting task
      $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script is starting. `n Running as ($whoami).")
      #=================================================================================
            
      # Begin MAIN script section
      #=================================================================================
      #Set the group instance we will discover members of
      #Discovery Section
      #$FileName = 'Cherwell.mez'
      Import-Module WebAdministration
      #Get all web sites hosted by this computer
      $websites = Get-WebSite
      $dirlist = New-Object System.Collections.ArrayList
      foreach($website in $websites){
          $sitename = $website.name
          [string]$sitepath = $website.physicalPath
          if($sitepath -match '^%'){
              $sitepath =  [System.Environment]::ExpandEnvironmentVariables("$sitepath")
          }
          $y = New-Object PSCustomObject
          $y | Add-Member -MemberType NoteProperty -Name SiteName -Value $sitename
          $y | Add-Member -MemberType NoteProperty -Name SitePath -Value $sitepath
          $dirlist.Add($y) | Out-Null
      
          #Get all web applications hosted in this web site
          $webapps = Get-WebApplication -Site $sitename
          foreach($webapp in $webapps){
              [string]$webapppath = $webapp.physicalPath
              if($webapppath -match '^%'){
                  $webapppath =  [System.Environment]::ExpandEnvironmentVariables("$webapppath")
              }
              $y = New-Object PSCustomObject
              $y | Add-Member -MemberType NoteProperty -Name SiteName -Value $sitename
              $y | Add-Member -MemberType NoteProperty -Name SitePath -Value $webapppath
              $dirlist.Add($y) | Out-Null
          }
          #Get all virtual directories hosted in this web site
          $webvds = Get-WebVirtualDirectory -Site $sitename
          foreach($webvd in $webvds){
              [string]$webvdpath = $webvd.physicalPath
              if($webvdpath -match '^%'){
                  $webvdpath =  [System.Environment]::ExpandEnvironmentVariables("$webvdpath")
              }
              $y = New-Object PSCustomObject
              $y | Add-Member -MemberType NoteProperty -Name SiteName -Value $sitename
              $y | Add-Member -MemberType NoteProperty -Name SitePath -Value $webvdpath
              $dirlist.Add($y) | Out-Null
          }
      }
      
      $webroots = $dirlist.SitePath
      $added = $false
      foreach($webroot in $webroots){
          #$momapi.LogScriptEvent($ScriptName,$EventID,0,"Web folders enumerated. `n Found $webroot.")
          $filemask = $webroot + '/*' + $FileName
          if(((Get-ChildItem -Path $filemask -Recurse).Name) -and ($added -eq $false)){
              
              #Set the group instance we will discover members of
              $xml = New-Object XML
              $xml.load('C:\ProgramData\Trebuchet\Connections.xml')
              #Load the namespace so we can refer to leafs explicitly
              $ns = New-Object System.Xml.XmlNamespaceManager($xml.NameTable)
              $ns.AddNamespace("ns", $xml.DocumentElement.NamespaceURI)
            
              $appinstance = ($xml.SelectNodes("//Trebuchet/ConnectionDefList/ConnectionDef[@SubType='PresumedWcfServer']").URL).Split('/')[2]
              $groupinstancedisplayname = "##ApplicationFriendlyName## Instance " + $appinstance + " Web Sites"
      
              #Set the group instance we will discover members of
              $GroupInstance = $DiscoveryData.CreateClassInstance("$MPElement[Name='##ApplicationName##.Application.Web.Sites.Instances.Group']$")
              $GroupInstance.AddProperty(“$MPElement[Name='System!System.Entity']/DisplayName$”, $groupinstancedisplayname)
              $GroupInstance.AddProperty(“$MPElement[Name='##ApplicationName##.Application.Web.Sites.Instances.Group']/ApplicationInstance$”, $appinstance)
              $GroupInstance.AddProperty(“$MPElement[Name='##ApplicationName##.Application.Web.Sites.Instances.Group']/TypeID$”, "Website")
      
              $thesite = ($dirlist | Where-Object {$_.SitePath -eq $webroot}).SiteName
              $Name = 'W3SVC/' + (Get-WebSite -Name $thesite).Id
      
              $momapi.LogScriptEvent($ScriptName,$EventID,0,"Adding web site $Name hosted on $ComputerName to group $groupinstancedisplayname, for instance $appinstance.")                
              $WebSiteInstance = $DiscoveryData.CreateClassInstance("$MPElement[Name='MicrosoftWindowsInternetInformationServices2016!Microsoft.Windows.InternetInformationServices.10.0.WebSite']$")
              $WebSiteInstance.AddProperty("$MPElement[Name='IIS!Microsoft.Windows.InternetInformationServices.WebSite']/SiteID$",$Name)
              $WebSiteInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$",$ComputerName)
              $RelationshipInstance = $DiscoveryData.CreateRelationshipInstance("$MPElement[Name='MicrosoftSystemCenterInstanceGroupLibrary7585010!Microsoft.SystemCenter.InstanceGroupContainsEntities']$")
              $RelationshipInstance.Source = $GroupInstance
              $RelationshipInstance.Target = $WebSiteInstance
              $DiscoveryData.AddInstance($RelationshipInstance)
      
              $added = $true
          }
      }
      
      $DiscoveryData
      # End MAIN script section
            
      # End of script section
      #=================================================================================
      #Log an event for script ending and total execution time.
      $EndTime = Get-Date
      $ScriptTime = ($EndTime - $StartTime).TotalSeconds
      $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script Ending. `n Script Runtime: ($ScriptTime) seconds.")
      #=================================================================================
      #End Script
                 </ScriptBody>
          <Parameters>
            <Parameter>
              <Name>sourceId</Name>
              <Value>$MPElement$</Value>
            </Parameter>
            <Parameter>
              <Name>managedEntityId</Name>
              <Value>$Target/Id$</Value>
            </Parameter>
            <Parameter>
              <Name>ComputerName</Name>
              <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
            </Parameter>
            <Parameter>
              <Name>FileName</Name>
              <Value>##FILENAME##</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>300</TimeoutSeconds>
        </DataSource>
      </Discovery>
    </Discoveries>
  </Monitoring>
  <LanguagePacks>
    <LanguagePack ID="ENU">
      <DisplayStrings>
        <DisplayString ElementID="##ApplicationName##.Application.Web.Sites.Instances.Group.Discovery">
          <Name>##ApplicationFriendlyName## Web Site Discovery</Name>
          <Description>This discovery rule populates a group of IIS Web Sites</Description>
        </DisplayString>
      </DisplayStrings>
    </LanguagePack>
  </LanguagePacks>
</ManagementPackFragment>